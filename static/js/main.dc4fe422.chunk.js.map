{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","display","useState","text","setText","day","setDay","reminder","setReminder","isCompleted","className","onSubmit","e","preventDefault","alert","type","placeholder","onChange","target","value","currentTarget","checked","Button","color","onClick","style","backgroundColor","defaultProps","Header","title","onClicked","formDisplay","location","useLocation","pathname","Task","id","onDelete","onCompleted","onDoubleTap","onDoubleClick","Tasks","tasks","map","task","footerStyle","padding","borderRadius","Footer","to","About","href","App","setDisplay","setTasks","useEffect","a","fetchTasks","tasksData","getTasks","fetch","fetchData","res","json","fetchTask","addTask","method","headers","body","JSON","stringify","fetchNewTask","data","deleteTask","filter","completeTask","taskCompleted","updatedTask","updateTaskData","toggleReminder","taskToToggle","updTask","response","taskData","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc4fe422.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nconst AddTask = ({ onAdd, display }) => {\r\n    const [text, setText] = useState(\"\")\r\n    const [day, setDay] = useState(\"\")\r\n    const [reminder, setReminder] = useState(false)\r\n    const [isCompleted] = useState(false)\r\n\r\n    \r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(text === \"\") {\r\n            alert(\"Please Enter A Task\")\r\n            return\r\n        }\r\n\r\n        if(day === \"\") {\r\n            alert(\"Add task deadline\")\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder, isCompleted })\r\n\r\n        setText(\"\")\r\n        setDay(\"\")\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className={`add-form ${!display ? \"no-display\" : \"\"}`} onSubmit={onFormSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Add Task</label>\r\n                <input type=\"text\" placeholder=\"Enter Task\" onChange={(e) => setText(e.target.value)} value={text}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Add Day & Time</label>\r\n                <input type=\"text\" placeholder=\"Day, Time\" onChange={(e) => setDay(e.target.value)} value={day}/>\r\n            </div>\r\n            <div className=\"form-control-check\">\r\n                <label>Add Reminder</label>\r\n                <input type=\"checkbox\" onChange={(e) => setReminder(e.currentTarget.checked)} checked={reminder}/>\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Add Task\" className=\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    \r\n\r\n\r\n    return (\r\n        <button className=\"btn\" style={{ backgroundColor: color }} onClick={onClick}>{ text }</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: \"black\",\r\n    text: \"Button\"\r\n}\r\n\r\n\r\nexport default Button;\r\n","import Button from \"./Button\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nconst Header = ({ title, onClicked, formDisplay }) => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h3>{title}</h3>\r\n            {location.pathname === \"/\" && (\r\n                <Button color={`${formDisplay ? \"red\" : \"green\"}`} text={`${formDisplay ? \"Close\" : \"Add Task\"}`} onClick={onClicked}/>\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import { FaTimes, FaCheck } from 'react-icons/fa'\r\n\r\nconst Task = ({ id, text, day, reminder, isCompleted, onDelete, onCompleted, onDoubleTap }) => {\r\n    \r\n    return (\r\n        <div className={`task ${reminder  ? \"reminder\" : \"\"} ${isCompleted ? \"completed\" : \"\" }`} onDoubleClick={() => onDoubleTap(id)}>\r\n            <div>\r\n                <h3>{text}</h3>\r\n                <p>{day}</p>\r\n            </div>\r\n            <div className=\"task-option\">\r\n                <div className=\"done-task\">\r\n                    <FaCheck style={{ color: \"green\" }} onClick={() => onCompleted(id)}/>\r\n                </div>\r\n                <div className=\"delete-task\">\r\n                <FaTimes style={{ color: \"red\" }} onClick={() => onDelete(id)}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onCompleted, onDoubleTap }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => {\r\n            return <Task key={task.id} id={task.id} text={task.text} day={task.day} reminder={task.reminder} isCompleted={task.isCompleted} onDelete={onDelete} onCompleted={onCompleted} onDoubleTap={onDoubleTap}/>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { Link, useLocation } from \"react-router-dom\"\r\n\r\nconst Footer = () => {\r\n    const location = useLocation();\r\n\r\n    \r\n\r\n    return (\r\n        <footer style={footerStyle}>\r\n            <p>Copyright &copy; 2021</p>\r\n            {!(location.pathname === \"/About\") ? (<Link to=\"/About\">About</Link>) : (<Link to=\"/\">Go Back</Link>) }\r\n        </footer>\r\n    )\r\n}\r\n\r\nconst footerStyle = {\r\n    padding: \"20px 0\",\r\n    color: \"White\", \r\n    backgroundColor: \"black\",\r\n    borderRadius: \"5px\"\r\n}\r\n\r\nexport default Footer\r\n","import { FaRegThumbsUp } from \"react-icons/fa\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <p>This project was created with reference to a tutorial by <a href=\"https://twitter.com/traversymedia?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\">@traversymedia</a> on YouTube. The tutorial was a massive help in understanding the basic concepts of React and how it works. Thanks Man <FaRegThumbsUp /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from \"react\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport AddTask from \"./components/AddTask\"\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport Footer from \"./components/Footer\"\nimport About from \"./components/About\"\n\nconst App = () => {\n  const [display, setDisplay] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n\nuseEffect(() => {\n  const getTasks = async() => {\n    const tasksData = await fetchTasks()\n    setTasks(tasksData)\n  }\n\n  getTasks()\n}, [])\n\n// fetches tasks\nconst fetchTasks = async() => {\n  const fetchData = await fetch(`http://localhost:5000/tasks`)\n  const res = fetchData.json()\n\n  return res;\n}\n\n// fetches tasks\nconst fetchTask = async(id) => {\n  const fetchData = await fetch(`http://localhost:5000/tasks/${id}`)\n  const res = fetchData.json()\n\n  return res;\n}\n\n  // Adds new task\n  const addTask = async(task) => {\n    const fetchNewTask = await fetch(`http://localhost:5000/tasks`, {\n      method: \"POST\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await fetchNewTask.json()\n\n    setTasks([...tasks, data])\n  }\n\n\n  //Toggles the display of the AddTaskForm\n  const toggleFormDisplay = () => {\n    setDisplay(!display)\n  }\n\n \n  // Deletes tasks\n  const deleteTask = async(id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    })\n    \n    setTasks(tasks.filter((task) => {\n      return task.id !== id;\n    }))\n  }\n\n\n  // Sets Tasks as completed\n  const completeTask = async(id) => {\n    const taskCompleted = await fetchTask(id)\n    const updatedTask = { ...taskCompleted, isCompleted: !taskCompleted.isCompleted }\n\n    updateTaskData(id, updatedTask)\n\n    setTasks(\n      tasks.map((task) => \n        task.id === id ? {...task, isCompleted: !task.isCompleted} \n        : \n        task\n      )\n    )\n  }\n\n  // Sets reminder\n  const toggleReminder = async(id) => {\n    const taskToToggle = await fetchTask(id)\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    updateTaskData(id, updatedTask)\n\n    setTasks(\n      tasks.map((task) => \n      task.id === id ? {...task, reminder: !task.reminder} \n      : \n      task\n    )\n    )\n  }\n\n  // Updates Task Data at the backend\n  const updateTaskData = async (id, updTask) => {\n    const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const taskData = response.json()\n\n    return taskData;\n  }\n  \n  return (\n    <Router>\n      <div className=\"container\">\n        <Header title=\"Task Tracker\" formDisplay={display} onClicked={toggleFormDisplay}/>\n        \n        <Route path=\"/\" exact render={(props) => {\n            return (\n            <>\n              <AddTask onAdd={addTask} display={display}/>\n              {\n                tasks.length < 1 ? \n                (\n                  \"It's awfully quiet in here\" \n                ) : (\n                  <Tasks \n                    tasks={tasks} \n                    onDelete={deleteTask} \n                    onCompleted={completeTask}\n                    onDoubleTap={toggleReminder}\n                  />\n                )\n              }\n            </>\n            )\n          }}\n        />\n        <Route path=\"/About\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}